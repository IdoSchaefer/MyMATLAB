% This file assumes the existance of the variables: c (the signal, -(K-1)/2*dt<=t<=((K-1)/2 + 1)*dt), dt (the time step),
% and K (the number of exponential terms in the line list).
Nt = length(c);
% Building the c index matrices:
v = ones(1, K);
u = 0:K-1;
minusi = v.'*u - u.'*v;
t0i = floor((K - 1)/2) + 1;
U0 = c(minusi + t0i);
U1 = c(minusi + 1 + t0i);
[B, Du] = eig(U1, U0);
w = -log(diag(Du).')/(1i*dt);
[w, w_order] = sort(w);
f = w/(2*pi);
% optional - for grasp results, in cm-1:
wave_number = f*1e15/3e10;
%FTc = fft(c(1:K));
d = zeros(1, K);
for k = 1:K
    % Normalizing B(:, k) with respect to U0:
%    B(:, k) = B(:, k)/sqrt(B(:, k)'*U0*B(:, k));
%    expd(k) = (B(:, k).'*FTc(1:K))^2;
    Bc = (B(:, k).'*c(0:(K - 1) + t0i));
    BU0B = B(:, k)'*U0*B(:, k);
    d(k) = Bc*conj(Bc)*BU0B/(BU0B*conj(BU0B));
end
% wtMat = cos((0:2:(2*K - 1)).'*dt*w);
% d = (wtMat\c(1:2:2*K)).';
d = d(w_order);
% d_result = abs(expd(real(expw)>=0))*2;
% g_result = imag(expw(real(expw)>=0));
tmax = (2*K-1)*dt;
% meand is the mean value of the amplitude, calculated with an integral on
% exp(imag(w)*t) over the time.
% meand = d_result.*1./(g_result*tmax).*(exp(g_result*tmax) - 1);
%d_result = abs(expd(1:2:K))*2
%[maxd, nmaxd] = max(abs(expd)*2);
[maxd, nmaxd] = max(d);
%wn_maxd = abs(real(w_result(nmaxd))*1e15/(3e10*2*pi))
%wreal = real(w_result);
%wn_maxd = real(w_result(nmaxd))*1e15/(3e10*2*pi)
w_maxd = w(nmaxd)
maxd
figure
%plot(wave_number, d_result)
plot(w, d)
hold on
%plot(wave_number, meand, '--r')